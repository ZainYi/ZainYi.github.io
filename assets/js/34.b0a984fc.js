(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{207:function(n,e,t){"use strict";t.r(e);var i=t(0),s=Object(i.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var n=this.$createElement,e=this._self._c||n;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"mysql-36-条军规"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mysql-36-条军规","aria-hidden":"true"}},[this._v("#")]),this._v(" MySQL 36 条军规")]),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("写在前面的话：\n总是在灾难发生后，才想起容灾的重要性；\n总是在吃过亏后，才记得曾经有人提醒过。\n\n一. 核心军规\n\n1. 不在数据库做运算\n    cpu计算务必移至业务层\n\n2. 控制单表数据量\n    int型不超过1000w，含char则不超过500w\n    合理分表\n    限制单库表数量在300以内\n\n3. 控制列数量\n    字段少而精，字段数建议在20以内\n\n4. 平衡范式与冗余\n    效率优先\n    往往牺牲范式\n\n5. 拒绝3B\n    拒绝大sql语句：big sql\n    拒绝大事物：big transaction\n    拒绝大批量：big batch\n\n二. 字段类军规\n\n6. 用好数值类型\n    tinyint(1Byte)\n    smallint(2Byte)\n    mediumint(3Byte)\n    int(4Byte)\n    bigint(8Byte)\n    bad case：int(1)/int(11)\n\n7. 字符转化为数字\n    用int而不是char(15)存储ip\n\n8. 优先使用enum或set\n    例如：`sex` enum (‘F’, ‘M’)\n\n9. 避免使用NULL字段\n    NULL字段很难查询优化\n    NULL字段的索引需要额外空间\n    NULL字段的复合索引无效\n    bad case：\n    `name` char(32) default null\n    `age` int not null\n    good case：\n    `age` int not null default 0\n\n10. 少用text/blob\n    varchar的性能会比text高很多\n    实在避免不了blob，请拆表\n\n11. 不在数据库里存图片数据\n    而是存图片地址\n\n三. 索引类军规\n\n12. 谨慎合理使用索引\n    改善查询、减慢更新\n    索引一定不是越多越好(能不加就不加，要加的一定得加)\n    覆盖记录条数过多不适合建索引，例如“性别”\n\n13. 字符字段必须建前缀索引\n\n14. 不在索引做列运算\n    不只是索引，尽量不能做列运算吧\n    bad case：\n    select id where age +1 = 10\n\n15. innodb主键推荐使用自增列\n    主键建立聚簇索引\n    主键不应该被修改\n    字符串不应该做主键\n    如果不指定主键，innodb会使用唯一且非空值索引代替\n\n16. 不用外键\n    请由程序保证约束\n\n四. sql类军规\n\n17. sql语句尽可能简单\n    一条sql只能在一个cpu运算\n    大语句拆小语句，减少锁时间\n    一条大sql可以堵死整个库\n\n18. 简单的事务\n    事务时间尽可能短\n    bad case\n    上传图片事务\n\n19. 避免使用trig/func\n    触发器、函数不用\n    客户端程序取而代之\n\n20. 不用select *\n    消耗cpu，io，内存，带宽\n    这种程序不具有扩展性\n\n21. OR改写为IN()\n    or的效率是n级别\n    in的消息时log(n)级别\n    in的个数建议控制在200以内\n        select id from t where phone=’159′ or phone=’136′;\n        =>\n        select id from t where phone in (’159′, ’136′);\n\n22. OR改写为UNION\n    mysql的索引合并很弱智\n        select id from t where phone = ’159′ or name = ‘john’;\n        =>\n        select id from t where phone=’159′\n        union\n        select id from t where name=’jonh’\n\n23. 避免负向%\n\n24. 慎用count(*)\n\n25. 同上\n\n26. limit高效分页\n    limit越大，效率越低\n    select id from t limit 10000, 10;\n    =>\n    select id from t where id > 10000 limit 10;\n\n27. 使用union all替代union\n    union有去重开销\n\n28. 少用连接join\n\n29. 使用group by\n    分组\n    自动排序\n\n30. 请使用同类型比较\n\n31. 使用load data导数据\n    load data比insert快约20倍\n\n32. 打散批量更新\n\n33. 新能分析工具\n    show profile;\n    mysqlsla;\n    mysqldumpslow;\n    explain;\n    show slow log;\n    show processlist;\n    show query_response_time(percona);\n")])])])])}],!1,null,null,null);s.options.__file="MYSQL.md";e.default=s.exports}}]);